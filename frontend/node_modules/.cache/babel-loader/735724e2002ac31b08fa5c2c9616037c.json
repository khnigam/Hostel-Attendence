{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Vivaan\\\\Downloads\\\\Hostel-Management-master\\\\Hostel-Management-master\\\\frontend\\\\src\\\\screens\\\\homeView.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Student from \"../components/student\";\nimport Loading from \"../components/loader.jsx\";\nimport Message from \"../components/message.jsx\";\nimport { listStudents } from \"../actions/studentActions\";\nimport Paginate from \"../components/paginate\";\nimport { Row, Col, ButtonGroup, ToggleButton, Container } from \"react-bootstrap\";\nimport StudentsTableView from \"./studentTableView\";\n\nconst HomeView = ({\n  match,\n  history\n}) => {\n  _s();\n\n  const [isGrid, setIsGrid] = useState(true);\n  const keyword = match.params.keyword;\n  const pageNumber = match.params.pageNumber || 1;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    loading: userLoading,\n    userInfo\n  } = userLogin;\n  const dispatch = useDispatch();\n  const studentsList = useSelector(state => state.studentsList);\n  const {\n    loading,\n    error,\n    students,\n    page,\n    pages\n  } = studentsList;\n  useEffect(() => {\n    if (!userLoading && !userInfo) {\n      history.push(\"/login\");\n    }\n\n    dispatch(listStudents(keyword, pageNumber));\n  }, [keyword, pageNumber]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-md-center\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: true,\n            lg: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: \"auto\",\n            children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              toggle: true,\n              children: [\"Grid\", \"Table\"].map(type => /*#__PURE__*/_jsxDEV(ToggleButton, {\n                type: \"radio\",\n                variant: \"secondary\",\n                name: \"radio\",\n                value: type,\n                checked: (isGrid ? \"Grid\" : \"Table\") === type,\n                onChange: e => setIsGrid(e.target.value === \"Grid\" ? true : false),\n                children: type === \"Grid\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: \" Grid\"\n                }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: \" Table \"\n                }, void 0, false)\n              }, type, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: true,\n            lg: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Students\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this) : isGrid ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: students.map(student => /*#__PURE__*/_jsxDEV(Col, {\n          sm: 12,\n          md: 6,\n          lg: 4,\n          xl: 3,\n          children: /*#__PURE__*/_jsxDEV(Student, {\n            stuentDetails: student\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)\n        }, student._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Paginate, {\n        pages: pages,\n        page: page,\n        keyword: keyword ? keyword : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(StudentsTableView, {\n        keyword: keyword,\n        pageNumber: pageNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n};\n\n_s(HomeView, \"frZ2S9zlQmeLSASA4ofdi4S0Los=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = HomeView;\nexport default HomeView;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeView\");","map":{"version":3,"sources":["C:/Users/Vivaan/Downloads/Hostel-Management-master/Hostel-Management-master/frontend/src/screens/homeView.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","Student","Loading","Message","listStudents","Paginate","Row","Col","ButtonGroup","ToggleButton","Container","StudentsTableView","HomeView","match","history","isGrid","setIsGrid","keyword","params","pageNumber","userLogin","state","loading","userLoading","userInfo","dispatch","studentsList","error","students","page","pages","push","map","type","e","target","value","student","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Student from \"../components/student\";\nimport Loading from \"../components/loader.jsx\";\nimport Message from \"../components/message.jsx\";\nimport { listStudents } from \"../actions/studentActions\";\nimport Paginate from \"../components/paginate\";\nimport {\n  Row,\n  Col,\n  ButtonGroup,\n  ToggleButton,\n  Container,\n} from \"react-bootstrap\";\nimport StudentsTableView from \"./studentTableView\";\n\nconst HomeView = ({ match, history }) => {\n  const [isGrid, setIsGrid] = useState(true);\n  const keyword = match.params.keyword;\n\n  const pageNumber = match.params.pageNumber || 1;\n  const userLogin = useSelector((state) => state.userLogin);\n  const { loading: userLoading, userInfo } = userLogin;\n\n  const dispatch = useDispatch();\n\n  const studentsList = useSelector((state) => state.studentsList);\n  const { loading, error, students, page, pages } = studentsList;\n\n  useEffect(() => {\n    if (!userLoading && !userInfo) {\n      history.push(\"/login\");\n    }\n    dispatch(listStudents(keyword, pageNumber));\n  }, [keyword, pageNumber]);\n\n  return (\n    <>\n      <>\n        <Container>\n          <Row className=\"justify-content-md-center\">\n            <Col xs lg=\"2\"></Col>\n            <Col md=\"auto\">\n              <ButtonGroup toggle>\n                {[\"Grid\", \"Table\"].map((type) => (\n                  <ToggleButton\n                    key={type}\n                    type=\"radio\"\n                    variant=\"secondary\"\n                    name=\"radio\"\n                    value={type}\n                    checked={(isGrid ? \"Grid\" : \"Table\") === type}\n                    onChange={(e) =>\n                      setIsGrid(e.target.value === \"Grid\" ? true : false)\n                    }\n                  >\n                    {type === \"Grid\" ? <> Grid</> : <> Table </>}\n                  </ToggleButton>\n                ))}\n              </ButtonGroup>\n            </Col>\n            <Col xs lg=\"2\"></Col>\n          </Row>\n        </Container>\n      </>\n\n      <h1>Students</h1>\n      {loading ? (\n        <Loading />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : isGrid ? (\n        <>\n          <Row>\n            {students.map((student) => (\n              <Col key={student._id} sm={12} md={6} lg={4} xl={3}>\n                <Student stuentDetails={student} />\n              </Col>\n            ))}\n          </Row>\n          <Paginate\n            pages={pages}\n            page={page}\n            keyword={keyword ? keyword : \"\"}\n          />\n        </>\n      ) : (\n        <>\n          <StudentsTableView keyword={keyword} pageNumber={pageNumber} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default HomeView;\n"]},"metadata":{},"sourceType":"module"}